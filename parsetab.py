
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AMPERSANT AND APOSTROPHE ARGS ARRAY ASSERT BOOLEAN BREAK BYTE CASE CATCH CHAR CLASS CLOSETAG COLON COMMA COMMENTS COMMENTS_C99 CONST CONTINUE DEFAULT DEQUAL DISTINT DIVIDE DO DOT DOT_DOT DOUBLE ELSE ENUM EQUAL EXTENDS FALSE FINAL FINALLY FLOAT FOR GOTO GREATER GREATEREQUAL HASHTAG ID IDVAR IF IMPLEMENTS IMPORT INSTANCEOF INT INTERFACE ISEQUAL JAVA LBLOCK LBRACKET LESS LESSEQUAL LONG LPAREN MAIN MINUS MINUSEQUAL MINUSMINUS MODULO NATIVE NEW NUM OPENTAG OR PACKAGE PLUS PLUSEQUAL PLUSPLUS PRIVATE PROTECTED PUBLIC PUBLIC QUOTES RBLOCK RBRACKET RETURN RPAREN SCANNER SEMI SHORT STATIC STATIC STRICTFP STRING SUPER SWITCH SYNCHRONIZED THIS THROW THROWS TIMES TIMESTIMES TRANSIENT TRUE TRY UTIL VOID VOLATILE WHILE\n\tprogram : p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK\n\t\n\tp_package : PACKAGE ID SEMI\n\t\n\tp_importar : IMPORT JAVA DOT UTIL DOT SCANNER SEMI\n\t\n\tdeclaration_list : declaration_list declaraciones\n\t\t\t\t\t| declaraciones\n\t\t\t\t\t\n\tdeclaraciones : INT ID SEMI\n\t\t\t\t\t | INT ID EQUAL NUM SEMI\n\t\t\t\t\t | ID ID SEMI\n\t\t\t\t\t | SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI\n\t\t\t\t\t | BOOLEAN ID EQUAL FALSE SEMI\n\t\t\t\t\t | opera\n\t\t\t\t\t | sentencia\n\topera : ID EQUAL ID PLUS NUM SEMI\n\t\t\t | ID EQUAL ID MINUS NUM SEMI\n\t\t\t | ID EQUAL ID DIVIDE NUM SEMI\n\t\t\t | ID EQUAL ID TIMES NUM SEMI\n\t\t\t | ID EQUAL NUM PLUS NUM SEMI\n\t\t\t | ID EQUAL NUM MINUS NUM SEMI\n\t\t\t | ID EQUAL NUM DIVIDE NUM SEMI\n\t\t\t | ID EQUAL NUM TIMES NUM SEMI\n\t\t\t | ID EQUAL ID PLUS ID SEMI\n\t\t\t | ID EQUAL ID MINUS ID SEMI\n\t\t\t | ID EQUAL ID DIVIDE ID SEMI\n\t\t\t | ID EQUAL ID TIMES ID SEMI\n\t\t\t | ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI\n\t\t\t | ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI\n\t\t\t | ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI\n\tsentencia : IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK\n\t\t\t\t | IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK\n\t\t\t\t | IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK\n\t\t\t\t | IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK\n\t\t\t\t | ELSE LBLOCK response RBLOCK\n\t\t\t\t | DO LBLOCK response RBLOCK\n\t\t\t\t | WHILE LPAREN ID LESS ID RPAREN SEMI\n\t\t\t\t | WHILE LPAREN ID GREATER ID RPAREN SEMI\n\t\t\t\t | WHILE LPAREN ID ISEQUAL ID RPAREN SEMI\n\t\t\t\t | WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI\n\t\t\t\t | WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI\n\t\t\t\t | WHILE LPAREN ID DEQUAL ID RPAREN SEMI\n\tresponse : ID DOT ID DOT ID LPAREN STRING RPAREN SEMI\n\t'
    
_lr_action_items = {'PACKAGE':([0,],[3,]),'$end':([1,39,],[0,-1,]),'IMPORT':([2,9,],[5,-2,]),'ID':([3,16,24,25,26,27,28,29,30,31,32,38,40,44,45,46,47,48,51,60,61,62,63,71,72,73,74,75,76,77,78,79,80,81,82,83,96,98,111,112,113,115,116,117,118,119,120,121,122,123,124,129,136,137,139,140,141,142,144,145,146,147,148,149,152,158,159,162,163,164,165,175,177,178,179,],[6,18,25,37,25,-5,41,42,43,-11,-12,49,-4,55,57,57,59,-8,-6,84,86,88,90,99,100,101,102,-32,103,-33,104,105,106,107,108,109,-7,-10,-21,-13,-22,-14,-23,-15,-24,-16,-17,-18,-19,-20,138,143,150,151,57,57,57,57,-34,-35,-36,-37,-38,-39,161,167,168,-28,-29,-30,-31,-9,-26,-27,-25,]),'PUBLIC':([4,19,],[7,-3,]),'JAVA':([5,],[8,]),'SEMI':([6,17,37,41,68,70,84,85,86,87,88,89,90,91,92,93,94,95,130,131,132,133,134,135,170,171,172,173,174,],[9,19,48,51,96,98,111,112,113,115,116,117,118,119,120,121,122,123,144,145,146,147,148,149,175,176,177,178,179,]),'STATIC':([7,],[10,]),'DOT':([8,13,57,103,138,],[11,15,76,129,152,]),'VOID':([10,],[12,]),'UTIL':([11,],[13,]),'MAIN':([12,],[14,]),'LPAREN':([14,33,36,97,110,114,143,],[16,44,47,124,136,137,157,]),'SCANNER':([15,24,26,27,31,32,40,48,51,69,75,77,96,98,111,112,113,115,116,117,118,119,120,121,122,123,144,145,146,147,148,149,162,163,164,165,175,177,178,179,],[17,29,29,-5,-11,-12,-4,-8,-6,97,-32,-33,-7,-10,-21,-13,-22,-14,-23,-15,-24,-16,-17,-18,-19,-20,-34,-35,-36,-37,-38,-39,-28,-29,-30,-31,-9,-26,-27,-25,]),'LBRACKET':([18,],[20,]),'RBRACKET':([20,],[21,]),'ARGS':([21,],[22,]),'RPAREN':([22,99,100,101,102,104,105,106,107,108,109,161,166,167,168,169,],[23,125,126,127,128,130,131,132,133,134,135,170,171,172,173,174,]),'LBLOCK':([23,34,35,125,126,127,128,],[24,45,46,139,140,141,142,]),'INT':([24,26,27,31,32,40,48,51,75,77,96,98,111,112,113,115,116,117,118,119,120,121,122,123,144,145,146,147,148,149,162,163,164,165,175,177,178,179,],[28,28,-5,-11,-12,-4,-8,-6,-32,-33,-7,-10,-21,-13,-22,-14,-23,-15,-24,-16,-17,-18,-19,-20,-34,-35,-36,-37,-38,-39,-28,-29,-30,-31,-9,-26,-27,-25,]),'BOOLEAN':([24,26,27,31,32,40,48,51,75,77,96,98,111,112,113,115,116,117,118,119,120,121,122,123,144,145,146,147,148,149,162,163,164,165,175,177,178,179,],[30,30,-5,-11,-12,-4,-8,-6,-32,-33,-7,-10,-21,-13,-22,-14,-23,-15,-24,-16,-17,-18,-19,-20,-34,-35,-36,-37,-38,-39,-28,-29,-30,-31,-9,-26,-27,-25,]),'IF':([24,26,27,31,32,40,48,51,75,77,96,98,111,112,113,115,116,117,118,119,120,121,122,123,144,145,146,147,148,149,162,163,164,165,175,177,178,179,],[33,33,-5,-11,-12,-4,-8,-6,-32,-33,-7,-10,-21,-13,-22,-14,-23,-15,-24,-16,-17,-18,-19,-20,-34,-35,-36,-37,-38,-39,-28,-29,-30,-31,-9,-26,-27,-25,]),'ELSE':([24,26,27,31,32,40,48,51,75,77,96,98,111,112,113,115,116,117,118,119,120,121,122,123,144,145,146,147,148,149,162,163,164,165,175,177,178,179,],[34,34,-5,-11,-12,-4,-8,-6,-32,-33,-7,-10,-21,-13,-22,-14,-23,-15,-24,-16,-17,-18,-19,-20,-34,-35,-36,-37,-38,-39,-28,-29,-30,-31,-9,-26,-27,-25,]),'DO':([24,26,27,31,32,40,48,51,75,77,96,98,111,112,113,115,116,117,118,119,120,121,122,123,144,145,146,147,148,149,162,163,164,165,175,177,178,179,],[35,35,-5,-11,-12,-4,-8,-6,-32,-33,-7,-10,-21,-13,-22,-14,-23,-15,-24,-16,-17,-18,-19,-20,-34,-35,-36,-37,-38,-39,-28,-29,-30,-31,-9,-26,-27,-25,]),'WHILE':([24,26,27,31,32,40,48,51,75,77,96,98,111,112,113,115,116,117,118,119,120,121,122,123,144,145,146,147,148,149,162,163,164,165,175,177,178,179,],[36,36,-5,-11,-12,-4,-8,-6,-32,-33,-7,-10,-21,-13,-22,-14,-23,-15,-24,-16,-17,-18,-19,-20,-34,-35,-36,-37,-38,-39,-28,-29,-30,-31,-9,-26,-27,-25,]),'EQUAL':([25,41,42,43,],[38,52,53,54,]),'RBLOCK':([26,27,31,32,40,48,51,56,58,75,77,96,98,111,112,113,115,116,117,118,119,120,121,122,123,144,145,146,147,148,149,153,154,155,156,162,163,164,165,175,176,177,178,179,],[39,-5,-11,-12,-4,-8,-6,75,77,-32,-33,-7,-10,-21,-13,-22,-14,-23,-15,-24,-16,-17,-18,-19,-20,-34,-35,-36,-37,-38,-39,162,163,164,165,-28,-29,-30,-31,-9,-40,-26,-27,-25,]),'NUM':([38,52,60,61,62,63,64,65,66,67,160,],[50,68,85,87,89,91,92,93,94,95,169,]),'PLUS':([49,50,84,86,151,],[60,64,110,114,160,]),'MINUS':([49,50,151,],[61,65,159,]),'DIVIDE':([49,50,],[62,66,]),'TIMES':([49,50,150,],[63,67,158,]),'NEW':([53,],[69,]),'FALSE':([54,],[70,]),'ISEQUAL':([55,59,],[71,80,]),'LESSEQUAL':([55,59,],[72,81,]),'GREATEREQUAL':([55,59,],[73,82,]),'DEQUAL':([55,59,],[74,83,]),'LESS':([59,],[78,]),'GREATER':([59,],[79,]),'STRING':([157,],[166,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'p_package':([0,],[2,]),'p_importar':([2,],[4,]),'declaration_list':([24,],[26,]),'declaraciones':([24,26,],[27,40,]),'opera':([24,26,],[31,31,]),'sentencia':([24,26,],[32,32,]),'response':([45,46,139,140,141,142,],[56,58,153,154,155,156,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK','program',15,'p_program','java_parser.py',25),
  ('p_package -> PACKAGE ID SEMI','p_package',3,'p_package','java_parser.py',31),
  ('p_importar -> IMPORT JAVA DOT UTIL DOT SCANNER SEMI','p_importar',7,'p_importar','java_parser.py',35),
  ('declaration_list -> declaration_list declaraciones','declaration_list',2,'p_declaration_list','java_parser.py',41),
  ('declaration_list -> declaraciones','declaration_list',1,'p_declaration_list','java_parser.py',42),
  ('declaraciones -> INT ID SEMI','declaraciones',3,'p_declaraciones','java_parser.py',48),
  ('declaraciones -> INT ID EQUAL NUM SEMI','declaraciones',5,'p_declaraciones','java_parser.py',49),
  ('declaraciones -> ID ID SEMI','declaraciones',3,'p_declaraciones','java_parser.py',50),
  ('declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI','declaraciones',11,'p_declaraciones','java_parser.py',51),
  ('declaraciones -> BOOLEAN ID EQUAL FALSE SEMI','declaraciones',5,'p_declaraciones','java_parser.py',52),
  ('declaraciones -> opera','declaraciones',1,'p_declaraciones','java_parser.py',53),
  ('declaraciones -> sentencia','declaraciones',1,'p_declaraciones','java_parser.py',54),
  ('opera -> ID EQUAL ID PLUS NUM SEMI','opera',6,'p_opera','java_parser.py',58),
  ('opera -> ID EQUAL ID MINUS NUM SEMI','opera',6,'p_opera','java_parser.py',59),
  ('opera -> ID EQUAL ID DIVIDE NUM SEMI','opera',6,'p_opera','java_parser.py',60),
  ('opera -> ID EQUAL ID TIMES NUM SEMI','opera',6,'p_opera','java_parser.py',61),
  ('opera -> ID EQUAL NUM PLUS NUM SEMI','opera',6,'p_opera','java_parser.py',62),
  ('opera -> ID EQUAL NUM MINUS NUM SEMI','opera',6,'p_opera','java_parser.py',63),
  ('opera -> ID EQUAL NUM DIVIDE NUM SEMI','opera',6,'p_opera','java_parser.py',64),
  ('opera -> ID EQUAL NUM TIMES NUM SEMI','opera',6,'p_opera','java_parser.py',65),
  ('opera -> ID EQUAL ID PLUS ID SEMI','opera',6,'p_opera','java_parser.py',66),
  ('opera -> ID EQUAL ID MINUS ID SEMI','opera',6,'p_opera','java_parser.py',67),
  ('opera -> ID EQUAL ID DIVIDE ID SEMI','opera',6,'p_opera','java_parser.py',68),
  ('opera -> ID EQUAL ID TIMES ID SEMI','opera',6,'p_opera','java_parser.py',69),
  ('opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI','opera',12,'p_opera','java_parser.py',70),
  ('opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI','opera',12,'p_opera','java_parser.py',71),
  ('opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI','opera',12,'p_opera','java_parser.py',72),
  ('sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK','sentencia',9,'p_sentencia','java_parser.py',76),
  ('sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK','sentencia',9,'p_sentencia','java_parser.py',77),
  ('sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK','sentencia',9,'p_sentencia','java_parser.py',78),
  ('sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK','sentencia',9,'p_sentencia','java_parser.py',79),
  ('sentencia -> ELSE LBLOCK response RBLOCK','sentencia',4,'p_sentencia','java_parser.py',80),
  ('sentencia -> DO LBLOCK response RBLOCK','sentencia',4,'p_sentencia','java_parser.py',81),
  ('sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI','sentencia',7,'p_sentencia','java_parser.py',82),
  ('sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI','sentencia',7,'p_sentencia','java_parser.py',83),
  ('sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI','sentencia',7,'p_sentencia','java_parser.py',84),
  ('sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI','sentencia',7,'p_sentencia','java_parser.py',85),
  ('sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI','sentencia',7,'p_sentencia','java_parser.py',86),
  ('sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI','sentencia',7,'p_sentencia','java_parser.py',87),
  ('response -> ID DOT ID DOT ID LPAREN STRING RPAREN SEMI','response',9,'p_response','java_parser.py',92),
]
