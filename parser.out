Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AMPERSANT
    AND
    APOSTROPHE
    ARRAY
    ASSERT
    BREAK
    BYTE
    CASE
    CATCH
    CHAR
    CLASS
    CLOSETAG
    COLON
    COMMA
    COMMENTS
    COMMENTS_C99
    CONST
    CONTINUE
    DEFAULT
    DISTINT
    DOT_DOT
    DOUBLE
    ENUM
    EXTENDS
    FINAL
    FINALLY
    FLOAT
    FOR
    GOTO
    HASHTAG
    IDVAR
    IMPLEMENTS
    INSTANCEOF
    INTERFACE
    LONG
    MINUSEQUAL
    MINUSMINUS
    MODULO
    NATIVE
    OPENTAG
    OR
    PLUSEQUAL
    PLUSPLUS
    PRIVATE
    PROTECTED
    QUOTES
    RETURN
    SHORT
    STRICTFP
    SUPER
    SWITCH
    SYNCHRONIZED
    THIS
    THROW
    THROWS
    TIMESTIMES
    TRANSIENT
    TRUE
    TRY
    VOLATILE

Grammar

Rule 0     S' -> program
Rule 1     program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK
Rule 2     p_package -> PACKAGE ID SEMI
Rule 3     p_importar -> IMPORT JAVA DOT UTIL DOT SCANNER SEMI
Rule 4     declaration_list -> declaration_list declaraciones
Rule 5     declaration_list -> declaraciones
Rule 6     declaraciones -> INT ID SEMI
Rule 7     declaraciones -> INT ID EQUAL NUM SEMI
Rule 8     declaraciones -> ID ID SEMI
Rule 9     declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI
Rule 10    declaraciones -> BOOLEAN ID EQUAL FALSE SEMI
Rule 11    declaraciones -> opera
Rule 12    declaraciones -> sentencia
Rule 13    opera -> ID EQUAL ID PLUS NUM SEMI
Rule 14    opera -> ID EQUAL ID MINUS NUM SEMI
Rule 15    opera -> ID EQUAL ID DIVIDE NUM SEMI
Rule 16    opera -> ID EQUAL ID TIMES NUM SEMI
Rule 17    opera -> ID EQUAL NUM PLUS NUM SEMI
Rule 18    opera -> ID EQUAL NUM MINUS NUM SEMI
Rule 19    opera -> ID EQUAL NUM DIVIDE NUM SEMI
Rule 20    opera -> ID EQUAL NUM TIMES NUM SEMI
Rule 21    opera -> ID EQUAL ID PLUS ID SEMI
Rule 22    opera -> ID EQUAL ID MINUS ID SEMI
Rule 23    opera -> ID EQUAL ID DIVIDE ID SEMI
Rule 24    opera -> ID EQUAL ID TIMES ID SEMI
Rule 25    opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI
Rule 26    opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI
Rule 27    opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI
Rule 28    sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK
Rule 29    sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK
Rule 30    sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK
Rule 31    sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK
Rule 32    sentencia -> ELSE LBLOCK response RBLOCK
Rule 33    sentencia -> DO LBLOCK response RBLOCK
Rule 34    sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI
Rule 35    sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI
Rule 36    sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI
Rule 37    sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI
Rule 38    sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI
Rule 39    sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI
Rule 40    response -> ID DOT ID DOT ID LPAREN STRING RPAREN SEMI

Terminals, with rules where they appear

ABSTRACT             : 
AMPERSANT            : 
AND                  : 
APOSTROPHE           : 
ARGS                 : 1
ARRAY                : 
ASSERT               : 
BOOLEAN              : 10
BREAK                : 
BYTE                 : 
CASE                 : 
CATCH                : 
CHAR                 : 
CLASS                : 
CLOSETAG             : 
COLON                : 
COMMA                : 
COMMENTS             : 
COMMENTS_C99         : 
CONST                : 
CONTINUE             : 
DEFAULT              : 
DEQUAL               : 31 39
DISTINT              : 
DIVIDE               : 15 19 23
DO                   : 33
DOT                  : 3 3 9 40 40
DOT_DOT              : 
DOUBLE               : 
ELSE                 : 32
ENUM                 : 
EQUAL                : 7 9 10 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
EXTENDS              : 
FALSE                : 10
FINAL                : 
FINALLY              : 
FLOAT                : 
FOR                  : 
GOTO                 : 
GREATER              : 35
GREATEREQUAL         : 30 38
HASHTAG              : 
ID                   : 1 2 6 7 8 8 9 9 9 10 13 13 14 14 15 15 16 16 17 18 19 20 21 21 21 22 22 22 23 23 23 24 24 24 25 25 25 25 26 26 26 26 26 27 27 27 27 27 28 28 29 29 30 30 31 31 34 34 35 35 36 36 37 37 38 38 39 39 40 40 40
IDVAR                : 
IF                   : 28 29 30 31
IMPLEMENTS           : 
IMPORT               : 3
INSTANCEOF           : 
INT                  : 6 7
INTERFACE            : 
ISEQUAL              : 28 36
JAVA                 : 3
LBLOCK               : 1 28 29 30 31 32 33
LBRACKET             : 1
LESS                 : 34
LESSEQUAL            : 29 37
LONG                 : 
LPAREN               : 1 9 25 26 27 28 29 30 31 34 35 36 37 38 39 40
MAIN                 : 1
MINUS                : 14 18 22 25 27 27
MINUSEQUAL           : 
MINUSMINUS           : 
MODULO               : 
NATIVE               : 
NEW                  : 9
NUM                  : 7 13 14 15 16 17 17 18 18 19 19 20 20 25
OPENTAG              : 
OR                   : 
PACKAGE              : 2
PLUS                 : 13 17 21 25 25 26 26 27
PLUSEQUAL            : 
PLUSPLUS             : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 1
QUOTES               : 
RBLOCK               : 1 28 29 30 31 32 33
RBRACKET             : 1
RETURN               : 
RPAREN               : 1 9 25 26 27 28 29 30 31 34 35 36 37 38 39 40
SCANNER              : 3 9 9
SEMI                 : 2 3 6 7 8 9 10 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 34 35 36 37 38 39 40
SHORT                : 
STATIC               : 1
STRICTFP             : 
STRING               : 40
SUPER                : 
SWITCH               : 
SYNCHRONIZED         : 
THIS                 : 
THROW                : 
THROWS               : 
TIMES                : 16 20 24 26
TIMESTIMES           : 
TRANSIENT            : 
TRUE                 : 
TRY                  : 
UTIL                 : 3
VOID                 : 1
VOLATILE             : 
WHILE                : 34 35 36 37 38 39
error                : 

Nonterminals, with rules where they appear

declaraciones        : 4 5
declaration_list     : 1 4
opera                : 11
p_importar           : 1
p_package            : 1
program              : 0
response             : 28 29 30 31 32 33
sentencia            : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK
    (2) p_package -> . PACKAGE ID SEMI

    PACKAGE         shift and go to state 3

    program                        shift and go to state 1
    p_package                      shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> p_package . p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK
    (3) p_importar -> . IMPORT JAVA DOT UTIL DOT SCANNER SEMI

    IMPORT          shift and go to state 5

    p_importar                     shift and go to state 4

state 3

    (2) p_package -> PACKAGE . ID SEMI

    ID              shift and go to state 6


state 4

    (1) program -> p_package p_importar . PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK

    PUBLIC          shift and go to state 7


state 5

    (3) p_importar -> IMPORT . JAVA DOT UTIL DOT SCANNER SEMI

    JAVA            shift and go to state 8


state 6

    (2) p_package -> PACKAGE ID . SEMI

    SEMI            shift and go to state 9


state 7

    (1) program -> p_package p_importar PUBLIC . STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK

    STATIC          shift and go to state 10


state 8

    (3) p_importar -> IMPORT JAVA . DOT UTIL DOT SCANNER SEMI

    DOT             shift and go to state 11


state 9

    (2) p_package -> PACKAGE ID SEMI .

    IMPORT          reduce using rule 2 (p_package -> PACKAGE ID SEMI .)


state 10

    (1) program -> p_package p_importar PUBLIC STATIC . VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK

    VOID            shift and go to state 12


state 11

    (3) p_importar -> IMPORT JAVA DOT . UTIL DOT SCANNER SEMI

    UTIL            shift and go to state 13


state 12

    (1) program -> p_package p_importar PUBLIC STATIC VOID . MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK

    MAIN            shift and go to state 14


state 13

    (3) p_importar -> IMPORT JAVA DOT UTIL . DOT SCANNER SEMI

    DOT             shift and go to state 15


state 14

    (1) program -> p_package p_importar PUBLIC STATIC VOID MAIN . LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK

    LPAREN          shift and go to state 16


state 15

    (3) p_importar -> IMPORT JAVA DOT UTIL DOT . SCANNER SEMI

    SCANNER         shift and go to state 17


state 16

    (1) program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN . ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK

    ID              shift and go to state 18


state 17

    (3) p_importar -> IMPORT JAVA DOT UTIL DOT SCANNER . SEMI

    SEMI            shift and go to state 19


state 18

    (1) program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID . LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK

    LBRACKET        shift and go to state 20


state 19

    (3) p_importar -> IMPORT JAVA DOT UTIL DOT SCANNER SEMI .

    PUBLIC          reduce using rule 3 (p_importar -> IMPORT JAVA DOT UTIL DOT SCANNER SEMI .)


state 20

    (1) program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET . RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK

    RBRACKET        shift and go to state 21


state 21

    (1) program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET . ARGS RPAREN LBLOCK declaration_list RBLOCK

    ARGS            shift and go to state 22


state 22

    (1) program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS . RPAREN LBLOCK declaration_list RBLOCK

    RPAREN          shift and go to state 23


state 23

    (1) program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN . LBLOCK declaration_list RBLOCK

    LBLOCK          shift and go to state 24


state 24

    (1) program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK . declaration_list RBLOCK
    (4) declaration_list -> . declaration_list declaraciones
    (5) declaration_list -> . declaraciones
    (6) declaraciones -> . INT ID SEMI
    (7) declaraciones -> . INT ID EQUAL NUM SEMI
    (8) declaraciones -> . ID ID SEMI
    (9) declaraciones -> . SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI
    (10) declaraciones -> . BOOLEAN ID EQUAL FALSE SEMI
    (11) declaraciones -> . opera
    (12) declaraciones -> . sentencia
    (13) opera -> . ID EQUAL ID PLUS NUM SEMI
    (14) opera -> . ID EQUAL ID MINUS NUM SEMI
    (15) opera -> . ID EQUAL ID DIVIDE NUM SEMI
    (16) opera -> . ID EQUAL ID TIMES NUM SEMI
    (17) opera -> . ID EQUAL NUM PLUS NUM SEMI
    (18) opera -> . ID EQUAL NUM MINUS NUM SEMI
    (19) opera -> . ID EQUAL NUM DIVIDE NUM SEMI
    (20) opera -> . ID EQUAL NUM TIMES NUM SEMI
    (21) opera -> . ID EQUAL ID PLUS ID SEMI
    (22) opera -> . ID EQUAL ID MINUS ID SEMI
    (23) opera -> . ID EQUAL ID DIVIDE ID SEMI
    (24) opera -> . ID EQUAL ID TIMES ID SEMI
    (25) opera -> . ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI
    (26) opera -> . ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI
    (27) opera -> . ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI
    (28) sentencia -> . IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK
    (29) sentencia -> . IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK
    (30) sentencia -> . IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK
    (31) sentencia -> . IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK
    (32) sentencia -> . ELSE LBLOCK response RBLOCK
    (33) sentencia -> . DO LBLOCK response RBLOCK
    (34) sentencia -> . WHILE LPAREN ID LESS ID RPAREN SEMI
    (35) sentencia -> . WHILE LPAREN ID GREATER ID RPAREN SEMI
    (36) sentencia -> . WHILE LPAREN ID ISEQUAL ID RPAREN SEMI
    (37) sentencia -> . WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI
    (38) sentencia -> . WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI
    (39) sentencia -> . WHILE LPAREN ID DEQUAL ID RPAREN SEMI

    INT             shift and go to state 28
    ID              shift and go to state 25
    SCANNER         shift and go to state 29
    BOOLEAN         shift and go to state 30
    IF              shift and go to state 33
    ELSE            shift and go to state 34
    DO              shift and go to state 35
    WHILE           shift and go to state 36

    declaration_list               shift and go to state 26
    declaraciones                  shift and go to state 27
    opera                          shift and go to state 31
    sentencia                      shift and go to state 32

state 25

    (8) declaraciones -> ID . ID SEMI
    (13) opera -> ID . EQUAL ID PLUS NUM SEMI
    (14) opera -> ID . EQUAL ID MINUS NUM SEMI
    (15) opera -> ID . EQUAL ID DIVIDE NUM SEMI
    (16) opera -> ID . EQUAL ID TIMES NUM SEMI
    (17) opera -> ID . EQUAL NUM PLUS NUM SEMI
    (18) opera -> ID . EQUAL NUM MINUS NUM SEMI
    (19) opera -> ID . EQUAL NUM DIVIDE NUM SEMI
    (20) opera -> ID . EQUAL NUM TIMES NUM SEMI
    (21) opera -> ID . EQUAL ID PLUS ID SEMI
    (22) opera -> ID . EQUAL ID MINUS ID SEMI
    (23) opera -> ID . EQUAL ID DIVIDE ID SEMI
    (24) opera -> ID . EQUAL ID TIMES ID SEMI
    (25) opera -> ID . EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI
    (26) opera -> ID . EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI
    (27) opera -> ID . EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI

    ID              shift and go to state 37
    EQUAL           shift and go to state 38


state 26

    (1) program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list . RBLOCK
    (4) declaration_list -> declaration_list . declaraciones
    (6) declaraciones -> . INT ID SEMI
    (7) declaraciones -> . INT ID EQUAL NUM SEMI
    (8) declaraciones -> . ID ID SEMI
    (9) declaraciones -> . SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI
    (10) declaraciones -> . BOOLEAN ID EQUAL FALSE SEMI
    (11) declaraciones -> . opera
    (12) declaraciones -> . sentencia
    (13) opera -> . ID EQUAL ID PLUS NUM SEMI
    (14) opera -> . ID EQUAL ID MINUS NUM SEMI
    (15) opera -> . ID EQUAL ID DIVIDE NUM SEMI
    (16) opera -> . ID EQUAL ID TIMES NUM SEMI
    (17) opera -> . ID EQUAL NUM PLUS NUM SEMI
    (18) opera -> . ID EQUAL NUM MINUS NUM SEMI
    (19) opera -> . ID EQUAL NUM DIVIDE NUM SEMI
    (20) opera -> . ID EQUAL NUM TIMES NUM SEMI
    (21) opera -> . ID EQUAL ID PLUS ID SEMI
    (22) opera -> . ID EQUAL ID MINUS ID SEMI
    (23) opera -> . ID EQUAL ID DIVIDE ID SEMI
    (24) opera -> . ID EQUAL ID TIMES ID SEMI
    (25) opera -> . ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI
    (26) opera -> . ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI
    (27) opera -> . ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI
    (28) sentencia -> . IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK
    (29) sentencia -> . IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK
    (30) sentencia -> . IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK
    (31) sentencia -> . IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK
    (32) sentencia -> . ELSE LBLOCK response RBLOCK
    (33) sentencia -> . DO LBLOCK response RBLOCK
    (34) sentencia -> . WHILE LPAREN ID LESS ID RPAREN SEMI
    (35) sentencia -> . WHILE LPAREN ID GREATER ID RPAREN SEMI
    (36) sentencia -> . WHILE LPAREN ID ISEQUAL ID RPAREN SEMI
    (37) sentencia -> . WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI
    (38) sentencia -> . WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI
    (39) sentencia -> . WHILE LPAREN ID DEQUAL ID RPAREN SEMI

    RBLOCK          shift and go to state 39
    INT             shift and go to state 28
    ID              shift and go to state 25
    SCANNER         shift and go to state 29
    BOOLEAN         shift and go to state 30
    IF              shift and go to state 33
    ELSE            shift and go to state 34
    DO              shift and go to state 35
    WHILE           shift and go to state 36

    declaraciones                  shift and go to state 40
    opera                          shift and go to state 31
    sentencia                      shift and go to state 32

state 27

    (5) declaration_list -> declaraciones .

    RBLOCK          reduce using rule 5 (declaration_list -> declaraciones .)
    INT             reduce using rule 5 (declaration_list -> declaraciones .)
    ID              reduce using rule 5 (declaration_list -> declaraciones .)
    SCANNER         reduce using rule 5 (declaration_list -> declaraciones .)
    BOOLEAN         reduce using rule 5 (declaration_list -> declaraciones .)
    IF              reduce using rule 5 (declaration_list -> declaraciones .)
    ELSE            reduce using rule 5 (declaration_list -> declaraciones .)
    DO              reduce using rule 5 (declaration_list -> declaraciones .)
    WHILE           reduce using rule 5 (declaration_list -> declaraciones .)


state 28

    (6) declaraciones -> INT . ID SEMI
    (7) declaraciones -> INT . ID EQUAL NUM SEMI

    ID              shift and go to state 41


state 29

    (9) declaraciones -> SCANNER . ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI

    ID              shift and go to state 42


state 30

    (10) declaraciones -> BOOLEAN . ID EQUAL FALSE SEMI

    ID              shift and go to state 43


state 31

    (11) declaraciones -> opera .

    RBLOCK          reduce using rule 11 (declaraciones -> opera .)
    INT             reduce using rule 11 (declaraciones -> opera .)
    ID              reduce using rule 11 (declaraciones -> opera .)
    SCANNER         reduce using rule 11 (declaraciones -> opera .)
    BOOLEAN         reduce using rule 11 (declaraciones -> opera .)
    IF              reduce using rule 11 (declaraciones -> opera .)
    ELSE            reduce using rule 11 (declaraciones -> opera .)
    DO              reduce using rule 11 (declaraciones -> opera .)
    WHILE           reduce using rule 11 (declaraciones -> opera .)


state 32

    (12) declaraciones -> sentencia .

    RBLOCK          reduce using rule 12 (declaraciones -> sentencia .)
    INT             reduce using rule 12 (declaraciones -> sentencia .)
    ID              reduce using rule 12 (declaraciones -> sentencia .)
    SCANNER         reduce using rule 12 (declaraciones -> sentencia .)
    BOOLEAN         reduce using rule 12 (declaraciones -> sentencia .)
    IF              reduce using rule 12 (declaraciones -> sentencia .)
    ELSE            reduce using rule 12 (declaraciones -> sentencia .)
    DO              reduce using rule 12 (declaraciones -> sentencia .)
    WHILE           reduce using rule 12 (declaraciones -> sentencia .)


state 33

    (28) sentencia -> IF . LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK
    (29) sentencia -> IF . LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK
    (30) sentencia -> IF . LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK
    (31) sentencia -> IF . LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK

    LPAREN          shift and go to state 44


state 34

    (32) sentencia -> ELSE . LBLOCK response RBLOCK

    LBLOCK          shift and go to state 45


state 35

    (33) sentencia -> DO . LBLOCK response RBLOCK

    LBLOCK          shift and go to state 46


state 36

    (34) sentencia -> WHILE . LPAREN ID LESS ID RPAREN SEMI
    (35) sentencia -> WHILE . LPAREN ID GREATER ID RPAREN SEMI
    (36) sentencia -> WHILE . LPAREN ID ISEQUAL ID RPAREN SEMI
    (37) sentencia -> WHILE . LPAREN ID LESSEQUAL ID RPAREN SEMI
    (38) sentencia -> WHILE . LPAREN ID GREATEREQUAL ID RPAREN SEMI
    (39) sentencia -> WHILE . LPAREN ID DEQUAL ID RPAREN SEMI

    LPAREN          shift and go to state 47


state 37

    (8) declaraciones -> ID ID . SEMI

    SEMI            shift and go to state 48


state 38

    (13) opera -> ID EQUAL . ID PLUS NUM SEMI
    (14) opera -> ID EQUAL . ID MINUS NUM SEMI
    (15) opera -> ID EQUAL . ID DIVIDE NUM SEMI
    (16) opera -> ID EQUAL . ID TIMES NUM SEMI
    (17) opera -> ID EQUAL . NUM PLUS NUM SEMI
    (18) opera -> ID EQUAL . NUM MINUS NUM SEMI
    (19) opera -> ID EQUAL . NUM DIVIDE NUM SEMI
    (20) opera -> ID EQUAL . NUM TIMES NUM SEMI
    (21) opera -> ID EQUAL . ID PLUS ID SEMI
    (22) opera -> ID EQUAL . ID MINUS ID SEMI
    (23) opera -> ID EQUAL . ID DIVIDE ID SEMI
    (24) opera -> ID EQUAL . ID TIMES ID SEMI
    (25) opera -> ID EQUAL . ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI
    (26) opera -> ID EQUAL . ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI
    (27) opera -> ID EQUAL . ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI

    ID              shift and go to state 49
    NUM             shift and go to state 50


state 39

    (1) program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK .

    $end            reduce using rule 1 (program -> p_package p_importar PUBLIC STATIC VOID MAIN LPAREN ID LBRACKET RBRACKET ARGS RPAREN LBLOCK declaration_list RBLOCK .)


state 40

    (4) declaration_list -> declaration_list declaraciones .

    RBLOCK          reduce using rule 4 (declaration_list -> declaration_list declaraciones .)
    INT             reduce using rule 4 (declaration_list -> declaration_list declaraciones .)
    ID              reduce using rule 4 (declaration_list -> declaration_list declaraciones .)
    SCANNER         reduce using rule 4 (declaration_list -> declaration_list declaraciones .)
    BOOLEAN         reduce using rule 4 (declaration_list -> declaration_list declaraciones .)
    IF              reduce using rule 4 (declaration_list -> declaration_list declaraciones .)
    ELSE            reduce using rule 4 (declaration_list -> declaration_list declaraciones .)
    DO              reduce using rule 4 (declaration_list -> declaration_list declaraciones .)
    WHILE           reduce using rule 4 (declaration_list -> declaration_list declaraciones .)


state 41

    (6) declaraciones -> INT ID . SEMI
    (7) declaraciones -> INT ID . EQUAL NUM SEMI

    SEMI            shift and go to state 51
    EQUAL           shift and go to state 52


state 42

    (9) declaraciones -> SCANNER ID . EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI

    EQUAL           shift and go to state 53


state 43

    (10) declaraciones -> BOOLEAN ID . EQUAL FALSE SEMI

    EQUAL           shift and go to state 54


state 44

    (28) sentencia -> IF LPAREN . ID ISEQUAL ID RPAREN LBLOCK response RBLOCK
    (29) sentencia -> IF LPAREN . ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK
    (30) sentencia -> IF LPAREN . ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK
    (31) sentencia -> IF LPAREN . ID DEQUAL ID RPAREN LBLOCK response RBLOCK

    ID              shift and go to state 55


state 45

    (32) sentencia -> ELSE LBLOCK . response RBLOCK
    (40) response -> . ID DOT ID DOT ID LPAREN STRING RPAREN SEMI

    ID              shift and go to state 57

    response                       shift and go to state 56

state 46

    (33) sentencia -> DO LBLOCK . response RBLOCK
    (40) response -> . ID DOT ID DOT ID LPAREN STRING RPAREN SEMI

    ID              shift and go to state 57

    response                       shift and go to state 58

state 47

    (34) sentencia -> WHILE LPAREN . ID LESS ID RPAREN SEMI
    (35) sentencia -> WHILE LPAREN . ID GREATER ID RPAREN SEMI
    (36) sentencia -> WHILE LPAREN . ID ISEQUAL ID RPAREN SEMI
    (37) sentencia -> WHILE LPAREN . ID LESSEQUAL ID RPAREN SEMI
    (38) sentencia -> WHILE LPAREN . ID GREATEREQUAL ID RPAREN SEMI
    (39) sentencia -> WHILE LPAREN . ID DEQUAL ID RPAREN SEMI

    ID              shift and go to state 59


state 48

    (8) declaraciones -> ID ID SEMI .

    RBLOCK          reduce using rule 8 (declaraciones -> ID ID SEMI .)
    INT             reduce using rule 8 (declaraciones -> ID ID SEMI .)
    ID              reduce using rule 8 (declaraciones -> ID ID SEMI .)
    SCANNER         reduce using rule 8 (declaraciones -> ID ID SEMI .)
    BOOLEAN         reduce using rule 8 (declaraciones -> ID ID SEMI .)
    IF              reduce using rule 8 (declaraciones -> ID ID SEMI .)
    ELSE            reduce using rule 8 (declaraciones -> ID ID SEMI .)
    DO              reduce using rule 8 (declaraciones -> ID ID SEMI .)
    WHILE           reduce using rule 8 (declaraciones -> ID ID SEMI .)


state 49

    (13) opera -> ID EQUAL ID . PLUS NUM SEMI
    (14) opera -> ID EQUAL ID . MINUS NUM SEMI
    (15) opera -> ID EQUAL ID . DIVIDE NUM SEMI
    (16) opera -> ID EQUAL ID . TIMES NUM SEMI
    (21) opera -> ID EQUAL ID . PLUS ID SEMI
    (22) opera -> ID EQUAL ID . MINUS ID SEMI
    (23) opera -> ID EQUAL ID . DIVIDE ID SEMI
    (24) opera -> ID EQUAL ID . TIMES ID SEMI
    (25) opera -> ID EQUAL ID . MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI
    (26) opera -> ID EQUAL ID . PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI
    (27) opera -> ID EQUAL ID . MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI

    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    DIVIDE          shift and go to state 62
    TIMES           shift and go to state 63


state 50

    (17) opera -> ID EQUAL NUM . PLUS NUM SEMI
    (18) opera -> ID EQUAL NUM . MINUS NUM SEMI
    (19) opera -> ID EQUAL NUM . DIVIDE NUM SEMI
    (20) opera -> ID EQUAL NUM . TIMES NUM SEMI

    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67


state 51

    (6) declaraciones -> INT ID SEMI .

    RBLOCK          reduce using rule 6 (declaraciones -> INT ID SEMI .)
    INT             reduce using rule 6 (declaraciones -> INT ID SEMI .)
    ID              reduce using rule 6 (declaraciones -> INT ID SEMI .)
    SCANNER         reduce using rule 6 (declaraciones -> INT ID SEMI .)
    BOOLEAN         reduce using rule 6 (declaraciones -> INT ID SEMI .)
    IF              reduce using rule 6 (declaraciones -> INT ID SEMI .)
    ELSE            reduce using rule 6 (declaraciones -> INT ID SEMI .)
    DO              reduce using rule 6 (declaraciones -> INT ID SEMI .)
    WHILE           reduce using rule 6 (declaraciones -> INT ID SEMI .)


state 52

    (7) declaraciones -> INT ID EQUAL . NUM SEMI

    NUM             shift and go to state 68


state 53

    (9) declaraciones -> SCANNER ID EQUAL . NEW SCANNER LPAREN ID DOT ID RPAREN SEMI

    NEW             shift and go to state 69


state 54

    (10) declaraciones -> BOOLEAN ID EQUAL . FALSE SEMI

    FALSE           shift and go to state 70


state 55

    (28) sentencia -> IF LPAREN ID . ISEQUAL ID RPAREN LBLOCK response RBLOCK
    (29) sentencia -> IF LPAREN ID . LESSEQUAL ID RPAREN LBLOCK response RBLOCK
    (30) sentencia -> IF LPAREN ID . GREATEREQUAL ID RPAREN LBLOCK response RBLOCK
    (31) sentencia -> IF LPAREN ID . DEQUAL ID RPAREN LBLOCK response RBLOCK

    ISEQUAL         shift and go to state 71
    LESSEQUAL       shift and go to state 72
    GREATEREQUAL    shift and go to state 73
    DEQUAL          shift and go to state 74


state 56

    (32) sentencia -> ELSE LBLOCK response . RBLOCK

    RBLOCK          shift and go to state 75


state 57

    (40) response -> ID . DOT ID DOT ID LPAREN STRING RPAREN SEMI

    DOT             shift and go to state 76


state 58

    (33) sentencia -> DO LBLOCK response . RBLOCK

    RBLOCK          shift and go to state 77


state 59

    (34) sentencia -> WHILE LPAREN ID . LESS ID RPAREN SEMI
    (35) sentencia -> WHILE LPAREN ID . GREATER ID RPAREN SEMI
    (36) sentencia -> WHILE LPAREN ID . ISEQUAL ID RPAREN SEMI
    (37) sentencia -> WHILE LPAREN ID . LESSEQUAL ID RPAREN SEMI
    (38) sentencia -> WHILE LPAREN ID . GREATEREQUAL ID RPAREN SEMI
    (39) sentencia -> WHILE LPAREN ID . DEQUAL ID RPAREN SEMI

    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    ISEQUAL         shift and go to state 80
    LESSEQUAL       shift and go to state 81
    GREATEREQUAL    shift and go to state 82
    DEQUAL          shift and go to state 83


state 60

    (13) opera -> ID EQUAL ID PLUS . NUM SEMI
    (21) opera -> ID EQUAL ID PLUS . ID SEMI
    (26) opera -> ID EQUAL ID PLUS . ID PLUS LPAREN ID TIMES ID RPAREN SEMI

    NUM             shift and go to state 85
    ID              shift and go to state 84


state 61

    (14) opera -> ID EQUAL ID MINUS . NUM SEMI
    (22) opera -> ID EQUAL ID MINUS . ID SEMI
    (25) opera -> ID EQUAL ID MINUS . ID PLUS LPAREN ID PLUS NUM RPAREN SEMI
    (27) opera -> ID EQUAL ID MINUS . ID PLUS LPAREN ID MINUS ID RPAREN SEMI

    NUM             shift and go to state 87
    ID              shift and go to state 86


state 62

    (15) opera -> ID EQUAL ID DIVIDE . NUM SEMI
    (23) opera -> ID EQUAL ID DIVIDE . ID SEMI

    NUM             shift and go to state 89
    ID              shift and go to state 88


state 63

    (16) opera -> ID EQUAL ID TIMES . NUM SEMI
    (24) opera -> ID EQUAL ID TIMES . ID SEMI

    NUM             shift and go to state 91
    ID              shift and go to state 90


state 64

    (17) opera -> ID EQUAL NUM PLUS . NUM SEMI

    NUM             shift and go to state 92


state 65

    (18) opera -> ID EQUAL NUM MINUS . NUM SEMI

    NUM             shift and go to state 93


state 66

    (19) opera -> ID EQUAL NUM DIVIDE . NUM SEMI

    NUM             shift and go to state 94


state 67

    (20) opera -> ID EQUAL NUM TIMES . NUM SEMI

    NUM             shift and go to state 95


state 68

    (7) declaraciones -> INT ID EQUAL NUM . SEMI

    SEMI            shift and go to state 96


state 69

    (9) declaraciones -> SCANNER ID EQUAL NEW . SCANNER LPAREN ID DOT ID RPAREN SEMI

    SCANNER         shift and go to state 97


state 70

    (10) declaraciones -> BOOLEAN ID EQUAL FALSE . SEMI

    SEMI            shift and go to state 98


state 71

    (28) sentencia -> IF LPAREN ID ISEQUAL . ID RPAREN LBLOCK response RBLOCK

    ID              shift and go to state 99


state 72

    (29) sentencia -> IF LPAREN ID LESSEQUAL . ID RPAREN LBLOCK response RBLOCK

    ID              shift and go to state 100


state 73

    (30) sentencia -> IF LPAREN ID GREATEREQUAL . ID RPAREN LBLOCK response RBLOCK

    ID              shift and go to state 101


state 74

    (31) sentencia -> IF LPAREN ID DEQUAL . ID RPAREN LBLOCK response RBLOCK

    ID              shift and go to state 102


state 75

    (32) sentencia -> ELSE LBLOCK response RBLOCK .

    RBLOCK          reduce using rule 32 (sentencia -> ELSE LBLOCK response RBLOCK .)
    INT             reduce using rule 32 (sentencia -> ELSE LBLOCK response RBLOCK .)
    ID              reduce using rule 32 (sentencia -> ELSE LBLOCK response RBLOCK .)
    SCANNER         reduce using rule 32 (sentencia -> ELSE LBLOCK response RBLOCK .)
    BOOLEAN         reduce using rule 32 (sentencia -> ELSE LBLOCK response RBLOCK .)
    IF              reduce using rule 32 (sentencia -> ELSE LBLOCK response RBLOCK .)
    ELSE            reduce using rule 32 (sentencia -> ELSE LBLOCK response RBLOCK .)
    DO              reduce using rule 32 (sentencia -> ELSE LBLOCK response RBLOCK .)
    WHILE           reduce using rule 32 (sentencia -> ELSE LBLOCK response RBLOCK .)


state 76

    (40) response -> ID DOT . ID DOT ID LPAREN STRING RPAREN SEMI

    ID              shift and go to state 103


state 77

    (33) sentencia -> DO LBLOCK response RBLOCK .

    RBLOCK          reduce using rule 33 (sentencia -> DO LBLOCK response RBLOCK .)
    INT             reduce using rule 33 (sentencia -> DO LBLOCK response RBLOCK .)
    ID              reduce using rule 33 (sentencia -> DO LBLOCK response RBLOCK .)
    SCANNER         reduce using rule 33 (sentencia -> DO LBLOCK response RBLOCK .)
    BOOLEAN         reduce using rule 33 (sentencia -> DO LBLOCK response RBLOCK .)
    IF              reduce using rule 33 (sentencia -> DO LBLOCK response RBLOCK .)
    ELSE            reduce using rule 33 (sentencia -> DO LBLOCK response RBLOCK .)
    DO              reduce using rule 33 (sentencia -> DO LBLOCK response RBLOCK .)
    WHILE           reduce using rule 33 (sentencia -> DO LBLOCK response RBLOCK .)


state 78

    (34) sentencia -> WHILE LPAREN ID LESS . ID RPAREN SEMI

    ID              shift and go to state 104


state 79

    (35) sentencia -> WHILE LPAREN ID GREATER . ID RPAREN SEMI

    ID              shift and go to state 105


state 80

    (36) sentencia -> WHILE LPAREN ID ISEQUAL . ID RPAREN SEMI

    ID              shift and go to state 106


state 81

    (37) sentencia -> WHILE LPAREN ID LESSEQUAL . ID RPAREN SEMI

    ID              shift and go to state 107


state 82

    (38) sentencia -> WHILE LPAREN ID GREATEREQUAL . ID RPAREN SEMI

    ID              shift and go to state 108


state 83

    (39) sentencia -> WHILE LPAREN ID DEQUAL . ID RPAREN SEMI

    ID              shift and go to state 109


state 84

    (21) opera -> ID EQUAL ID PLUS ID . SEMI
    (26) opera -> ID EQUAL ID PLUS ID . PLUS LPAREN ID TIMES ID RPAREN SEMI

    SEMI            shift and go to state 111
    PLUS            shift and go to state 110


state 85

    (13) opera -> ID EQUAL ID PLUS NUM . SEMI

    SEMI            shift and go to state 112


state 86

    (22) opera -> ID EQUAL ID MINUS ID . SEMI
    (25) opera -> ID EQUAL ID MINUS ID . PLUS LPAREN ID PLUS NUM RPAREN SEMI
    (27) opera -> ID EQUAL ID MINUS ID . PLUS LPAREN ID MINUS ID RPAREN SEMI

    SEMI            shift and go to state 113
    PLUS            shift and go to state 114


state 87

    (14) opera -> ID EQUAL ID MINUS NUM . SEMI

    SEMI            shift and go to state 115


state 88

    (23) opera -> ID EQUAL ID DIVIDE ID . SEMI

    SEMI            shift and go to state 116


state 89

    (15) opera -> ID EQUAL ID DIVIDE NUM . SEMI

    SEMI            shift and go to state 117


state 90

    (24) opera -> ID EQUAL ID TIMES ID . SEMI

    SEMI            shift and go to state 118


state 91

    (16) opera -> ID EQUAL ID TIMES NUM . SEMI

    SEMI            shift and go to state 119


state 92

    (17) opera -> ID EQUAL NUM PLUS NUM . SEMI

    SEMI            shift and go to state 120


state 93

    (18) opera -> ID EQUAL NUM MINUS NUM . SEMI

    SEMI            shift and go to state 121


state 94

    (19) opera -> ID EQUAL NUM DIVIDE NUM . SEMI

    SEMI            shift and go to state 122


state 95

    (20) opera -> ID EQUAL NUM TIMES NUM . SEMI

    SEMI            shift and go to state 123


state 96

    (7) declaraciones -> INT ID EQUAL NUM SEMI .

    RBLOCK          reduce using rule 7 (declaraciones -> INT ID EQUAL NUM SEMI .)
    INT             reduce using rule 7 (declaraciones -> INT ID EQUAL NUM SEMI .)
    ID              reduce using rule 7 (declaraciones -> INT ID EQUAL NUM SEMI .)
    SCANNER         reduce using rule 7 (declaraciones -> INT ID EQUAL NUM SEMI .)
    BOOLEAN         reduce using rule 7 (declaraciones -> INT ID EQUAL NUM SEMI .)
    IF              reduce using rule 7 (declaraciones -> INT ID EQUAL NUM SEMI .)
    ELSE            reduce using rule 7 (declaraciones -> INT ID EQUAL NUM SEMI .)
    DO              reduce using rule 7 (declaraciones -> INT ID EQUAL NUM SEMI .)
    WHILE           reduce using rule 7 (declaraciones -> INT ID EQUAL NUM SEMI .)


state 97

    (9) declaraciones -> SCANNER ID EQUAL NEW SCANNER . LPAREN ID DOT ID RPAREN SEMI

    LPAREN          shift and go to state 124


state 98

    (10) declaraciones -> BOOLEAN ID EQUAL FALSE SEMI .

    RBLOCK          reduce using rule 10 (declaraciones -> BOOLEAN ID EQUAL FALSE SEMI .)
    INT             reduce using rule 10 (declaraciones -> BOOLEAN ID EQUAL FALSE SEMI .)
    ID              reduce using rule 10 (declaraciones -> BOOLEAN ID EQUAL FALSE SEMI .)
    SCANNER         reduce using rule 10 (declaraciones -> BOOLEAN ID EQUAL FALSE SEMI .)
    BOOLEAN         reduce using rule 10 (declaraciones -> BOOLEAN ID EQUAL FALSE SEMI .)
    IF              reduce using rule 10 (declaraciones -> BOOLEAN ID EQUAL FALSE SEMI .)
    ELSE            reduce using rule 10 (declaraciones -> BOOLEAN ID EQUAL FALSE SEMI .)
    DO              reduce using rule 10 (declaraciones -> BOOLEAN ID EQUAL FALSE SEMI .)
    WHILE           reduce using rule 10 (declaraciones -> BOOLEAN ID EQUAL FALSE SEMI .)


state 99

    (28) sentencia -> IF LPAREN ID ISEQUAL ID . RPAREN LBLOCK response RBLOCK

    RPAREN          shift and go to state 125


state 100

    (29) sentencia -> IF LPAREN ID LESSEQUAL ID . RPAREN LBLOCK response RBLOCK

    RPAREN          shift and go to state 126


state 101

    (30) sentencia -> IF LPAREN ID GREATEREQUAL ID . RPAREN LBLOCK response RBLOCK

    RPAREN          shift and go to state 127


state 102

    (31) sentencia -> IF LPAREN ID DEQUAL ID . RPAREN LBLOCK response RBLOCK

    RPAREN          shift and go to state 128


state 103

    (40) response -> ID DOT ID . DOT ID LPAREN STRING RPAREN SEMI

    DOT             shift and go to state 129


state 104

    (34) sentencia -> WHILE LPAREN ID LESS ID . RPAREN SEMI

    RPAREN          shift and go to state 130


state 105

    (35) sentencia -> WHILE LPAREN ID GREATER ID . RPAREN SEMI

    RPAREN          shift and go to state 131


state 106

    (36) sentencia -> WHILE LPAREN ID ISEQUAL ID . RPAREN SEMI

    RPAREN          shift and go to state 132


state 107

    (37) sentencia -> WHILE LPAREN ID LESSEQUAL ID . RPAREN SEMI

    RPAREN          shift and go to state 133


state 108

    (38) sentencia -> WHILE LPAREN ID GREATEREQUAL ID . RPAREN SEMI

    RPAREN          shift and go to state 134


state 109

    (39) sentencia -> WHILE LPAREN ID DEQUAL ID . RPAREN SEMI

    RPAREN          shift and go to state 135


state 110

    (26) opera -> ID EQUAL ID PLUS ID PLUS . LPAREN ID TIMES ID RPAREN SEMI

    LPAREN          shift and go to state 136


state 111

    (21) opera -> ID EQUAL ID PLUS ID SEMI .

    RBLOCK          reduce using rule 21 (opera -> ID EQUAL ID PLUS ID SEMI .)
    INT             reduce using rule 21 (opera -> ID EQUAL ID PLUS ID SEMI .)
    ID              reduce using rule 21 (opera -> ID EQUAL ID PLUS ID SEMI .)
    SCANNER         reduce using rule 21 (opera -> ID EQUAL ID PLUS ID SEMI .)
    BOOLEAN         reduce using rule 21 (opera -> ID EQUAL ID PLUS ID SEMI .)
    IF              reduce using rule 21 (opera -> ID EQUAL ID PLUS ID SEMI .)
    ELSE            reduce using rule 21 (opera -> ID EQUAL ID PLUS ID SEMI .)
    DO              reduce using rule 21 (opera -> ID EQUAL ID PLUS ID SEMI .)
    WHILE           reduce using rule 21 (opera -> ID EQUAL ID PLUS ID SEMI .)


state 112

    (13) opera -> ID EQUAL ID PLUS NUM SEMI .

    RBLOCK          reduce using rule 13 (opera -> ID EQUAL ID PLUS NUM SEMI .)
    INT             reduce using rule 13 (opera -> ID EQUAL ID PLUS NUM SEMI .)
    ID              reduce using rule 13 (opera -> ID EQUAL ID PLUS NUM SEMI .)
    SCANNER         reduce using rule 13 (opera -> ID EQUAL ID PLUS NUM SEMI .)
    BOOLEAN         reduce using rule 13 (opera -> ID EQUAL ID PLUS NUM SEMI .)
    IF              reduce using rule 13 (opera -> ID EQUAL ID PLUS NUM SEMI .)
    ELSE            reduce using rule 13 (opera -> ID EQUAL ID PLUS NUM SEMI .)
    DO              reduce using rule 13 (opera -> ID EQUAL ID PLUS NUM SEMI .)
    WHILE           reduce using rule 13 (opera -> ID EQUAL ID PLUS NUM SEMI .)


state 113

    (22) opera -> ID EQUAL ID MINUS ID SEMI .

    RBLOCK          reduce using rule 22 (opera -> ID EQUAL ID MINUS ID SEMI .)
    INT             reduce using rule 22 (opera -> ID EQUAL ID MINUS ID SEMI .)
    ID              reduce using rule 22 (opera -> ID EQUAL ID MINUS ID SEMI .)
    SCANNER         reduce using rule 22 (opera -> ID EQUAL ID MINUS ID SEMI .)
    BOOLEAN         reduce using rule 22 (opera -> ID EQUAL ID MINUS ID SEMI .)
    IF              reduce using rule 22 (opera -> ID EQUAL ID MINUS ID SEMI .)
    ELSE            reduce using rule 22 (opera -> ID EQUAL ID MINUS ID SEMI .)
    DO              reduce using rule 22 (opera -> ID EQUAL ID MINUS ID SEMI .)
    WHILE           reduce using rule 22 (opera -> ID EQUAL ID MINUS ID SEMI .)


state 114

    (25) opera -> ID EQUAL ID MINUS ID PLUS . LPAREN ID PLUS NUM RPAREN SEMI
    (27) opera -> ID EQUAL ID MINUS ID PLUS . LPAREN ID MINUS ID RPAREN SEMI

    LPAREN          shift and go to state 137


state 115

    (14) opera -> ID EQUAL ID MINUS NUM SEMI .

    RBLOCK          reduce using rule 14 (opera -> ID EQUAL ID MINUS NUM SEMI .)
    INT             reduce using rule 14 (opera -> ID EQUAL ID MINUS NUM SEMI .)
    ID              reduce using rule 14 (opera -> ID EQUAL ID MINUS NUM SEMI .)
    SCANNER         reduce using rule 14 (opera -> ID EQUAL ID MINUS NUM SEMI .)
    BOOLEAN         reduce using rule 14 (opera -> ID EQUAL ID MINUS NUM SEMI .)
    IF              reduce using rule 14 (opera -> ID EQUAL ID MINUS NUM SEMI .)
    ELSE            reduce using rule 14 (opera -> ID EQUAL ID MINUS NUM SEMI .)
    DO              reduce using rule 14 (opera -> ID EQUAL ID MINUS NUM SEMI .)
    WHILE           reduce using rule 14 (opera -> ID EQUAL ID MINUS NUM SEMI .)


state 116

    (23) opera -> ID EQUAL ID DIVIDE ID SEMI .

    RBLOCK          reduce using rule 23 (opera -> ID EQUAL ID DIVIDE ID SEMI .)
    INT             reduce using rule 23 (opera -> ID EQUAL ID DIVIDE ID SEMI .)
    ID              reduce using rule 23 (opera -> ID EQUAL ID DIVIDE ID SEMI .)
    SCANNER         reduce using rule 23 (opera -> ID EQUAL ID DIVIDE ID SEMI .)
    BOOLEAN         reduce using rule 23 (opera -> ID EQUAL ID DIVIDE ID SEMI .)
    IF              reduce using rule 23 (opera -> ID EQUAL ID DIVIDE ID SEMI .)
    ELSE            reduce using rule 23 (opera -> ID EQUAL ID DIVIDE ID SEMI .)
    DO              reduce using rule 23 (opera -> ID EQUAL ID DIVIDE ID SEMI .)
    WHILE           reduce using rule 23 (opera -> ID EQUAL ID DIVIDE ID SEMI .)


state 117

    (15) opera -> ID EQUAL ID DIVIDE NUM SEMI .

    RBLOCK          reduce using rule 15 (opera -> ID EQUAL ID DIVIDE NUM SEMI .)
    INT             reduce using rule 15 (opera -> ID EQUAL ID DIVIDE NUM SEMI .)
    ID              reduce using rule 15 (opera -> ID EQUAL ID DIVIDE NUM SEMI .)
    SCANNER         reduce using rule 15 (opera -> ID EQUAL ID DIVIDE NUM SEMI .)
    BOOLEAN         reduce using rule 15 (opera -> ID EQUAL ID DIVIDE NUM SEMI .)
    IF              reduce using rule 15 (opera -> ID EQUAL ID DIVIDE NUM SEMI .)
    ELSE            reduce using rule 15 (opera -> ID EQUAL ID DIVIDE NUM SEMI .)
    DO              reduce using rule 15 (opera -> ID EQUAL ID DIVIDE NUM SEMI .)
    WHILE           reduce using rule 15 (opera -> ID EQUAL ID DIVIDE NUM SEMI .)


state 118

    (24) opera -> ID EQUAL ID TIMES ID SEMI .

    RBLOCK          reduce using rule 24 (opera -> ID EQUAL ID TIMES ID SEMI .)
    INT             reduce using rule 24 (opera -> ID EQUAL ID TIMES ID SEMI .)
    ID              reduce using rule 24 (opera -> ID EQUAL ID TIMES ID SEMI .)
    SCANNER         reduce using rule 24 (opera -> ID EQUAL ID TIMES ID SEMI .)
    BOOLEAN         reduce using rule 24 (opera -> ID EQUAL ID TIMES ID SEMI .)
    IF              reduce using rule 24 (opera -> ID EQUAL ID TIMES ID SEMI .)
    ELSE            reduce using rule 24 (opera -> ID EQUAL ID TIMES ID SEMI .)
    DO              reduce using rule 24 (opera -> ID EQUAL ID TIMES ID SEMI .)
    WHILE           reduce using rule 24 (opera -> ID EQUAL ID TIMES ID SEMI .)


state 119

    (16) opera -> ID EQUAL ID TIMES NUM SEMI .

    RBLOCK          reduce using rule 16 (opera -> ID EQUAL ID TIMES NUM SEMI .)
    INT             reduce using rule 16 (opera -> ID EQUAL ID TIMES NUM SEMI .)
    ID              reduce using rule 16 (opera -> ID EQUAL ID TIMES NUM SEMI .)
    SCANNER         reduce using rule 16 (opera -> ID EQUAL ID TIMES NUM SEMI .)
    BOOLEAN         reduce using rule 16 (opera -> ID EQUAL ID TIMES NUM SEMI .)
    IF              reduce using rule 16 (opera -> ID EQUAL ID TIMES NUM SEMI .)
    ELSE            reduce using rule 16 (opera -> ID EQUAL ID TIMES NUM SEMI .)
    DO              reduce using rule 16 (opera -> ID EQUAL ID TIMES NUM SEMI .)
    WHILE           reduce using rule 16 (opera -> ID EQUAL ID TIMES NUM SEMI .)


state 120

    (17) opera -> ID EQUAL NUM PLUS NUM SEMI .

    RBLOCK          reduce using rule 17 (opera -> ID EQUAL NUM PLUS NUM SEMI .)
    INT             reduce using rule 17 (opera -> ID EQUAL NUM PLUS NUM SEMI .)
    ID              reduce using rule 17 (opera -> ID EQUAL NUM PLUS NUM SEMI .)
    SCANNER         reduce using rule 17 (opera -> ID EQUAL NUM PLUS NUM SEMI .)
    BOOLEAN         reduce using rule 17 (opera -> ID EQUAL NUM PLUS NUM SEMI .)
    IF              reduce using rule 17 (opera -> ID EQUAL NUM PLUS NUM SEMI .)
    ELSE            reduce using rule 17 (opera -> ID EQUAL NUM PLUS NUM SEMI .)
    DO              reduce using rule 17 (opera -> ID EQUAL NUM PLUS NUM SEMI .)
    WHILE           reduce using rule 17 (opera -> ID EQUAL NUM PLUS NUM SEMI .)


state 121

    (18) opera -> ID EQUAL NUM MINUS NUM SEMI .

    RBLOCK          reduce using rule 18 (opera -> ID EQUAL NUM MINUS NUM SEMI .)
    INT             reduce using rule 18 (opera -> ID EQUAL NUM MINUS NUM SEMI .)
    ID              reduce using rule 18 (opera -> ID EQUAL NUM MINUS NUM SEMI .)
    SCANNER         reduce using rule 18 (opera -> ID EQUAL NUM MINUS NUM SEMI .)
    BOOLEAN         reduce using rule 18 (opera -> ID EQUAL NUM MINUS NUM SEMI .)
    IF              reduce using rule 18 (opera -> ID EQUAL NUM MINUS NUM SEMI .)
    ELSE            reduce using rule 18 (opera -> ID EQUAL NUM MINUS NUM SEMI .)
    DO              reduce using rule 18 (opera -> ID EQUAL NUM MINUS NUM SEMI .)
    WHILE           reduce using rule 18 (opera -> ID EQUAL NUM MINUS NUM SEMI .)


state 122

    (19) opera -> ID EQUAL NUM DIVIDE NUM SEMI .

    RBLOCK          reduce using rule 19 (opera -> ID EQUAL NUM DIVIDE NUM SEMI .)
    INT             reduce using rule 19 (opera -> ID EQUAL NUM DIVIDE NUM SEMI .)
    ID              reduce using rule 19 (opera -> ID EQUAL NUM DIVIDE NUM SEMI .)
    SCANNER         reduce using rule 19 (opera -> ID EQUAL NUM DIVIDE NUM SEMI .)
    BOOLEAN         reduce using rule 19 (opera -> ID EQUAL NUM DIVIDE NUM SEMI .)
    IF              reduce using rule 19 (opera -> ID EQUAL NUM DIVIDE NUM SEMI .)
    ELSE            reduce using rule 19 (opera -> ID EQUAL NUM DIVIDE NUM SEMI .)
    DO              reduce using rule 19 (opera -> ID EQUAL NUM DIVIDE NUM SEMI .)
    WHILE           reduce using rule 19 (opera -> ID EQUAL NUM DIVIDE NUM SEMI .)


state 123

    (20) opera -> ID EQUAL NUM TIMES NUM SEMI .

    RBLOCK          reduce using rule 20 (opera -> ID EQUAL NUM TIMES NUM SEMI .)
    INT             reduce using rule 20 (opera -> ID EQUAL NUM TIMES NUM SEMI .)
    ID              reduce using rule 20 (opera -> ID EQUAL NUM TIMES NUM SEMI .)
    SCANNER         reduce using rule 20 (opera -> ID EQUAL NUM TIMES NUM SEMI .)
    BOOLEAN         reduce using rule 20 (opera -> ID EQUAL NUM TIMES NUM SEMI .)
    IF              reduce using rule 20 (opera -> ID EQUAL NUM TIMES NUM SEMI .)
    ELSE            reduce using rule 20 (opera -> ID EQUAL NUM TIMES NUM SEMI .)
    DO              reduce using rule 20 (opera -> ID EQUAL NUM TIMES NUM SEMI .)
    WHILE           reduce using rule 20 (opera -> ID EQUAL NUM TIMES NUM SEMI .)


state 124

    (9) declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN . ID DOT ID RPAREN SEMI

    ID              shift and go to state 138


state 125

    (28) sentencia -> IF LPAREN ID ISEQUAL ID RPAREN . LBLOCK response RBLOCK

    LBLOCK          shift and go to state 139


state 126

    (29) sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN . LBLOCK response RBLOCK

    LBLOCK          shift and go to state 140


state 127

    (30) sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN . LBLOCK response RBLOCK

    LBLOCK          shift and go to state 141


state 128

    (31) sentencia -> IF LPAREN ID DEQUAL ID RPAREN . LBLOCK response RBLOCK

    LBLOCK          shift and go to state 142


state 129

    (40) response -> ID DOT ID DOT . ID LPAREN STRING RPAREN SEMI

    ID              shift and go to state 143


state 130

    (34) sentencia -> WHILE LPAREN ID LESS ID RPAREN . SEMI

    SEMI            shift and go to state 144


state 131

    (35) sentencia -> WHILE LPAREN ID GREATER ID RPAREN . SEMI

    SEMI            shift and go to state 145


state 132

    (36) sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN . SEMI

    SEMI            shift and go to state 146


state 133

    (37) sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN . SEMI

    SEMI            shift and go to state 147


state 134

    (38) sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN . SEMI

    SEMI            shift and go to state 148


state 135

    (39) sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN . SEMI

    SEMI            shift and go to state 149


state 136

    (26) opera -> ID EQUAL ID PLUS ID PLUS LPAREN . ID TIMES ID RPAREN SEMI

    ID              shift and go to state 150


state 137

    (25) opera -> ID EQUAL ID MINUS ID PLUS LPAREN . ID PLUS NUM RPAREN SEMI
    (27) opera -> ID EQUAL ID MINUS ID PLUS LPAREN . ID MINUS ID RPAREN SEMI

    ID              shift and go to state 151


state 138

    (9) declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID . DOT ID RPAREN SEMI

    DOT             shift and go to state 152


state 139

    (28) sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK . response RBLOCK
    (40) response -> . ID DOT ID DOT ID LPAREN STRING RPAREN SEMI

    ID              shift and go to state 57

    response                       shift and go to state 153

state 140

    (29) sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK . response RBLOCK
    (40) response -> . ID DOT ID DOT ID LPAREN STRING RPAREN SEMI

    ID              shift and go to state 57

    response                       shift and go to state 154

state 141

    (30) sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK . response RBLOCK
    (40) response -> . ID DOT ID DOT ID LPAREN STRING RPAREN SEMI

    ID              shift and go to state 57

    response                       shift and go to state 155

state 142

    (31) sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK . response RBLOCK
    (40) response -> . ID DOT ID DOT ID LPAREN STRING RPAREN SEMI

    ID              shift and go to state 57

    response                       shift and go to state 156

state 143

    (40) response -> ID DOT ID DOT ID . LPAREN STRING RPAREN SEMI

    LPAREN          shift and go to state 157


state 144

    (34) sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI .

    RBLOCK          reduce using rule 34 (sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI .)
    INT             reduce using rule 34 (sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI .)
    ID              reduce using rule 34 (sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI .)
    SCANNER         reduce using rule 34 (sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 34 (sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI .)
    IF              reduce using rule 34 (sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI .)
    ELSE            reduce using rule 34 (sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI .)
    DO              reduce using rule 34 (sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI .)
    WHILE           reduce using rule 34 (sentencia -> WHILE LPAREN ID LESS ID RPAREN SEMI .)


state 145

    (35) sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI .

    RBLOCK          reduce using rule 35 (sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI .)
    INT             reduce using rule 35 (sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI .)
    ID              reduce using rule 35 (sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI .)
    SCANNER         reduce using rule 35 (sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 35 (sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI .)
    IF              reduce using rule 35 (sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI .)
    ELSE            reduce using rule 35 (sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI .)
    DO              reduce using rule 35 (sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI .)
    WHILE           reduce using rule 35 (sentencia -> WHILE LPAREN ID GREATER ID RPAREN SEMI .)


state 146

    (36) sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI .

    RBLOCK          reduce using rule 36 (sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI .)
    INT             reduce using rule 36 (sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI .)
    ID              reduce using rule 36 (sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI .)
    SCANNER         reduce using rule 36 (sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 36 (sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI .)
    IF              reduce using rule 36 (sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI .)
    ELSE            reduce using rule 36 (sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI .)
    DO              reduce using rule 36 (sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI .)
    WHILE           reduce using rule 36 (sentencia -> WHILE LPAREN ID ISEQUAL ID RPAREN SEMI .)


state 147

    (37) sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI .

    RBLOCK          reduce using rule 37 (sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI .)
    INT             reduce using rule 37 (sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI .)
    ID              reduce using rule 37 (sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI .)
    SCANNER         reduce using rule 37 (sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 37 (sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI .)
    IF              reduce using rule 37 (sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI .)
    ELSE            reduce using rule 37 (sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI .)
    DO              reduce using rule 37 (sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI .)
    WHILE           reduce using rule 37 (sentencia -> WHILE LPAREN ID LESSEQUAL ID RPAREN SEMI .)


state 148

    (38) sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI .

    RBLOCK          reduce using rule 38 (sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI .)
    INT             reduce using rule 38 (sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI .)
    ID              reduce using rule 38 (sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI .)
    SCANNER         reduce using rule 38 (sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 38 (sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI .)
    IF              reduce using rule 38 (sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI .)
    ELSE            reduce using rule 38 (sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI .)
    DO              reduce using rule 38 (sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI .)
    WHILE           reduce using rule 38 (sentencia -> WHILE LPAREN ID GREATEREQUAL ID RPAREN SEMI .)


state 149

    (39) sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI .

    RBLOCK          reduce using rule 39 (sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI .)
    INT             reduce using rule 39 (sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI .)
    ID              reduce using rule 39 (sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI .)
    SCANNER         reduce using rule 39 (sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 39 (sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI .)
    IF              reduce using rule 39 (sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI .)
    ELSE            reduce using rule 39 (sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI .)
    DO              reduce using rule 39 (sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI .)
    WHILE           reduce using rule 39 (sentencia -> WHILE LPAREN ID DEQUAL ID RPAREN SEMI .)


state 150

    (26) opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID . TIMES ID RPAREN SEMI

    TIMES           shift and go to state 158


state 151

    (25) opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID . PLUS NUM RPAREN SEMI
    (27) opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID . MINUS ID RPAREN SEMI

    PLUS            shift and go to state 160
    MINUS           shift and go to state 159


state 152

    (9) declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT . ID RPAREN SEMI

    ID              shift and go to state 161


state 153

    (28) sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response . RBLOCK

    RBLOCK          shift and go to state 162


state 154

    (29) sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response . RBLOCK

    RBLOCK          shift and go to state 163


state 155

    (30) sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response . RBLOCK

    RBLOCK          shift and go to state 164


state 156

    (31) sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response . RBLOCK

    RBLOCK          shift and go to state 165


state 157

    (40) response -> ID DOT ID DOT ID LPAREN . STRING RPAREN SEMI

    STRING          shift and go to state 166


state 158

    (26) opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES . ID RPAREN SEMI

    ID              shift and go to state 167


state 159

    (27) opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS . ID RPAREN SEMI

    ID              shift and go to state 168


state 160

    (25) opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS . NUM RPAREN SEMI

    NUM             shift and go to state 169


state 161

    (9) declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID . RPAREN SEMI

    RPAREN          shift and go to state 170


state 162

    (28) sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK .

    RBLOCK          reduce using rule 28 (sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK .)
    INT             reduce using rule 28 (sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK .)
    ID              reduce using rule 28 (sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK .)
    SCANNER         reduce using rule 28 (sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK .)
    BOOLEAN         reduce using rule 28 (sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK .)
    IF              reduce using rule 28 (sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK .)
    ELSE            reduce using rule 28 (sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK .)
    DO              reduce using rule 28 (sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK .)
    WHILE           reduce using rule 28 (sentencia -> IF LPAREN ID ISEQUAL ID RPAREN LBLOCK response RBLOCK .)


state 163

    (29) sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK .

    RBLOCK          reduce using rule 29 (sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK .)
    INT             reduce using rule 29 (sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK .)
    ID              reduce using rule 29 (sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK .)
    SCANNER         reduce using rule 29 (sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK .)
    BOOLEAN         reduce using rule 29 (sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK .)
    IF              reduce using rule 29 (sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK .)
    ELSE            reduce using rule 29 (sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK .)
    DO              reduce using rule 29 (sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK .)
    WHILE           reduce using rule 29 (sentencia -> IF LPAREN ID LESSEQUAL ID RPAREN LBLOCK response RBLOCK .)


state 164

    (30) sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK .

    RBLOCK          reduce using rule 30 (sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK .)
    INT             reduce using rule 30 (sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK .)
    ID              reduce using rule 30 (sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK .)
    SCANNER         reduce using rule 30 (sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK .)
    BOOLEAN         reduce using rule 30 (sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK .)
    IF              reduce using rule 30 (sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK .)
    ELSE            reduce using rule 30 (sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK .)
    DO              reduce using rule 30 (sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK .)
    WHILE           reduce using rule 30 (sentencia -> IF LPAREN ID GREATEREQUAL ID RPAREN LBLOCK response RBLOCK .)


state 165

    (31) sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK .

    RBLOCK          reduce using rule 31 (sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK .)
    INT             reduce using rule 31 (sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK .)
    ID              reduce using rule 31 (sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK .)
    SCANNER         reduce using rule 31 (sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK .)
    BOOLEAN         reduce using rule 31 (sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK .)
    IF              reduce using rule 31 (sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK .)
    ELSE            reduce using rule 31 (sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK .)
    DO              reduce using rule 31 (sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK .)
    WHILE           reduce using rule 31 (sentencia -> IF LPAREN ID DEQUAL ID RPAREN LBLOCK response RBLOCK .)


state 166

    (40) response -> ID DOT ID DOT ID LPAREN STRING . RPAREN SEMI

    RPAREN          shift and go to state 171


state 167

    (26) opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID . RPAREN SEMI

    RPAREN          shift and go to state 172


state 168

    (27) opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID . RPAREN SEMI

    RPAREN          shift and go to state 173


state 169

    (25) opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM . RPAREN SEMI

    RPAREN          shift and go to state 174


state 170

    (9) declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN . SEMI

    SEMI            shift and go to state 175


state 171

    (40) response -> ID DOT ID DOT ID LPAREN STRING RPAREN . SEMI

    SEMI            shift and go to state 176


state 172

    (26) opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN . SEMI

    SEMI            shift and go to state 177


state 173

    (27) opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN . SEMI

    SEMI            shift and go to state 178


state 174

    (25) opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN . SEMI

    SEMI            shift and go to state 179


state 175

    (9) declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI .

    RBLOCK          reduce using rule 9 (declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI .)
    INT             reduce using rule 9 (declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI .)
    ID              reduce using rule 9 (declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI .)
    SCANNER         reduce using rule 9 (declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 9 (declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI .)
    IF              reduce using rule 9 (declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI .)
    ELSE            reduce using rule 9 (declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI .)
    DO              reduce using rule 9 (declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI .)
    WHILE           reduce using rule 9 (declaraciones -> SCANNER ID EQUAL NEW SCANNER LPAREN ID DOT ID RPAREN SEMI .)


state 176

    (40) response -> ID DOT ID DOT ID LPAREN STRING RPAREN SEMI .

    RBLOCK          reduce using rule 40 (response -> ID DOT ID DOT ID LPAREN STRING RPAREN SEMI .)


state 177

    (26) opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI .

    RBLOCK          reduce using rule 26 (opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI .)
    INT             reduce using rule 26 (opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI .)
    ID              reduce using rule 26 (opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI .)
    SCANNER         reduce using rule 26 (opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 26 (opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI .)
    IF              reduce using rule 26 (opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI .)
    ELSE            reduce using rule 26 (opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI .)
    DO              reduce using rule 26 (opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI .)
    WHILE           reduce using rule 26 (opera -> ID EQUAL ID PLUS ID PLUS LPAREN ID TIMES ID RPAREN SEMI .)


state 178

    (27) opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI .

    RBLOCK          reduce using rule 27 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI .)
    INT             reduce using rule 27 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI .)
    ID              reduce using rule 27 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI .)
    SCANNER         reduce using rule 27 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI .)
    BOOLEAN         reduce using rule 27 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI .)
    IF              reduce using rule 27 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI .)
    ELSE            reduce using rule 27 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI .)
    DO              reduce using rule 27 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI .)
    WHILE           reduce using rule 27 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID MINUS ID RPAREN SEMI .)


state 179

    (25) opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI .

    RBLOCK          reduce using rule 25 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI .)
    INT             reduce using rule 25 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI .)
    ID              reduce using rule 25 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI .)
    SCANNER         reduce using rule 25 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI .)
    BOOLEAN         reduce using rule 25 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI .)
    IF              reduce using rule 25 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI .)
    ELSE            reduce using rule 25 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI .)
    DO              reduce using rule 25 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI .)
    WHILE           reduce using rule 25 (opera -> ID EQUAL ID MINUS ID PLUS LPAREN ID PLUS NUM RPAREN SEMI .)

